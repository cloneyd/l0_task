version: '3.9'

services:
  database:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nats-streaming:
    image: nats-streaming
    restart: on-failure:5

  frontend:
    image: l0-frontend
    restart: on-failure:5
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile #!

  nats-service-sub:
    image: l0-nats-streaming-sub
    restart: on-failure:5
    build:
      context: ./backend/nats_service_sub
      dockerfile: multistage.Dockerfile
    depends_on:
      nats-streaming:
        condition: service_started
      database:
        condition: service_healthy
    ports:
      - "8080:8080"

  nats-service-pub:
    image: l0-nats-streaming-pub
    build:
      context: ./publisher
      dockerfile: multistage.Dockerfile
    depends_on:
      - nats-service-sub

  web:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - nats-service-sub
